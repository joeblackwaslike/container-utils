#!/bin/sh

readonly SCRIPT_NAME=$(basename "$0")
: readonly ${ERLANG_COOKIE_PATH:=~/.erlang.cookie}

errlog() {
  local msg="$1"
  local date="$(date '+%Y-%m-%d %H:%M:%S')"
  echo "\033[32m[x]\033[0m $SCRIPT_NAME [$date]: $msg" >&2
}

get_user() {
  if [ -d ~ ]; then
    stat -c '%U' ~
    return 0
  elif getent passwd $(basename ~) > /dev/null 2>&1; then
    getent passwd $(basename ~) | cut -d':' -f1
    return 0
  elif getent passwd $(whoami) > /dev/null 2>&1; then
    whoami
    return 0
  elif getent passwd "root" > /dev/null 2>&1; then
    echo "root"
    return 0
  else
    errlog "Undefined error detecting user"
    exit 1
  fi
  echo "$user"
}

get_group() {
  if [ -d ~ ]; then
    stat -c '%G' ~
    return 0
  elif getent group $(basename ~) > /dev/null 2>&1; then
    getent group $(basename ~) | cut -d':' -f1
    return 0
  elif getent group $(whoami) > /dev/null 2>&1; then
    getent group $(whoami) | cut -d':' -f1
    return 0
  elif getent group "root" > /dev/null 2>&1; then
    echo "root"
    return 0
  else
    errlog "Undefined error detecting group"
    exit 1
  fi
}

write_erlang_cookie() {
  local value="$1"
  if [ -f "$ERLANG_COOKIE_PATH" ]; then
    local cur_value=$(cat "$ERLANG_COOKIE_PATH")
    if [ "$value" != "$cur_value" ] || [ -z "${cur_value}" ]; then
      echo "$value" > "$ERLANG_COOKIE_PATH"
    fi
  else
    if [ "$value" = 'insecure-cookie' ]; then
      errlog "*** ERLANG_COOKIE not set, falling back to insecure-cookie ***"
    fi
    echo "$value" > "$ERLANG_COOKIE_PATH"
  fi
}

set_perms() {
  local user="$1"
  local group="$2"
  if [ -f "$ERLANG_COOKIE_PATH" ]; then
    chown "$user:$group" "$ERLANG_COOKIE_PATH"
    chmod 0600 "$ERLANG_COOKIE_PATH"
  fi
}

print_docs() {
  cat <<'EOF'

erlang-cookie {write|help}

* DESCRIPTION *****

This tool will test for the environment variable: ERLANG_COOKIE

If present, it will be echo'd to ~/.erlang.cookie and have the correct 
ownership and permissions set.

The correct home, user, and group are auto-detected from the environment
using the following functions: get_home, get_user, get_group

* USAGE ***********

This can be called either in an entrypoint script or in the CMD, however it
is reccomended to add the following to:
  /etc/profile.d/80-detect-erlang-cookie.sh

if [ -n "$ERLANG_COOKIE" ]; then
    erlang-cookie write
fi

* NOTE ************

Do not use this container for erlang in production without generating your own
secure erlang cookie.

Keep in mind that the erlang distribution protocol requires that all nodes use
the same cookie value. 

The default path for the erlang cookie is: ~/.erlang.cookie.

*****************************************************************************

EOF
}

main() {
  if [ "$1" = "write" ]; then
    if [ -n "$ERLANG_COOKIE" ]; then
      local cookie="$ERLANG_COOKIE"
    else
      local cookie='insecure-cookie'
    fi
    local user=$(get_user)
    local group=$(get_group)
    write_erlang_cookie "$cookie"
    set_perms "$user" "$group"
  else
    print_docs
  fi
}

main "$@"
