#!/bin/bash

readonly PH_PATHS_PATH=/etc/paths.d


function is-directory {
    [[ -d "$1" ]]
}

function is-file {
    [[ -a "$1" ]]
}

function dir-is-empty {
    (($(ls -A "$1" | wc -l) == 0))
}

function path-exists {
    local path="$1"
    if is-directory "$path" || is-file "$path"; then
        return 0
    else
        return 1
    fi
}

function path-is-nonexistant {
    ! path-exists "$1"
}

function path-in-current-paths {
    local path="$1"
    local cpath
    for cpath in "${current_paths[@]}"; do
        if [[ $cpath = $path ]]; then
            return 0
        fi
    done
    return 1
}

function path-not-in-current-paths {
    ! path-in-current-paths "$1"
}

function paths-from-file {
    local file="$1"
    local path paths
    while read path; do
        path="${path//'~'/$HOME}"
        if path-exists "$path"; then
            paths+=($path)
        fi
    done <"$file"
    echo "${paths[@]}"
}

function get-current-paths {
    echo "${PATH//:/ }"
}

function get-new-paths {
    local file
    local new_paths=()
    for file in $PH_PATHS_PATH/*; do
        new_paths+=($(paths-from-file "$file"))
    done
    echo "${new_paths[@]}"
}

function merge-paths {
    local path merged_paths
    local paths_to_add=()
    for path in "${new_paths[@]}"; do
        if path-not-in-current-paths "$path"; then
            paths_to_add+=("$path")
        fi
    done
    merged_paths="${paths_to_add[@]} ${current_paths[@]}"
    echo "${merged_paths// /:}"
}

function main {
    local current_paths=($(get-current-paths))
    if is-directory $PH_PATHS_PATH; then
        local new_paths=($(get-new-paths))
        local merged_paths=$(merge-paths)
        merged_paths=$(echo $merged_paths | sed 's/^://')
        echo "PATH=$merged_paths"
    fi
}

main
